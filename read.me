



const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');
const path = require('path');
const dotenv = require('dotenv');

// Виведемо шлях до файлу .env
console.log('Шлях до .env:', path.resolve(__dirname, '.env'));

// Завантажуємо змінні з .env файлу
const result = dotenv.config();

if (result.error) {
    console.error("Помилка завантаження .env файлу:", result.error);
} else {
    console.log("Змінні з .env файлу завантажено успішно.");
}

// Додаємо перевірку та виведення змінних у консоль для дебагу
console.log('TELEGRAM_BOT_TOKEN:', process.env.TELEGRAM_BOT_TOKEN);
console.log('PORTMONE_PAYEE_ID:', process.env.PORTMONE_PAYEE_ID);
console.log('PORTMONE_LOGIN:', process.env.PORTMONE_LOGIN);
console.log('PORTMONE_PASSWORD:', process.env.PORTMONE_PASSWORD);

const token = process.env.TELEGRAM_BOT_TOKEN;
const portmonePayeeId = process.env.PORTMONE_PAYEE_ID;
const portmoneLogin = process.env.PORTMONE_LOGIN;
const portmonePassword = process.env.PORTMONE_PASSWORD;

if (!token) {
    throw new Error("Telegram Bot Token not provided!");
}

const bot = new TelegramBot(token, { polling: true });

let userPaymentStatus = {}; // To track payment status of users

function generatePayload() {
    return `payload_${Math.random().toString(36).substring(2, 15)}_${new Date().getTime()}`;
}

async function initiatePayment(chatId) {
    const uniquePayload = generatePayload();
    const prices = [
        { label: 'Тренування', amount: 10000 }
    ];

    try {
        await bot.sendInvoice(
            chatId,
            'Оплата за тренування',
            'Опис тренування, яке ви вибрали',
            uniquePayload,
            '1661751239:TEST:08re-aFnj-Xx0h-Tzsj',
            'payment-example',
            'UAH',
            [
                {
                    label:`Оплата`,
                    amount: 1000
                }
            ]
        );
    } catch (error) {
        console.error('Помилка при створенні інвойсу:', error.response?.body ?? error);
        bot.sendMessage(chatId, "Не вдалося ініціювати платіж. Спробуйте пізніше.");
    }
}

bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    bot.sendMessage(chatId, "Виберіть курс тренувань або оплатіть за тренування:", {
        reply_markup: {
            keyboard: [["Тренування 1"], ["Тренування 2"], ["Тренування 3"], ["Тренування на кожен день"], ["Оплатити тренування"]]
        }
    });
});

bot.on('message', (msg) => {
    const chatId = msg.chat.id;
    if (!msg.text) {
        return bot.sendMessage(chatId, "Ви нічого не ввели, спробуйте знову.");
    }
    const lowerText = msg.text.toString().toLowerCase();

    switch (lowerText) {
        case "тренування 1":
            sendTrainingVideos1(chatId);
            break;
        case "тренування 2":
            sendTrainingVideo2(chatId);
            break;
        case "тренування 3":
            sendTrainingVideo3(chatId);
            break;
        case "тренування на кожен день":
            if (userPaymentStatus[chatId]) {
                const videoUrl = 'https://drive.google.com/uc?export=download&id=1dh5-DH6Uxi66HHqRlfDGu2x_rpVy4bnZ';
                bot.sendMessage(chatId, "Тут ваше тренування:");
                bot.sendVideo(chatId, videoUrl);
            } else {
                bot.sendMessage(chatId, "Будь ласка, спочатку оплатіть тренування.");
            }
            break;
        case "оплатити тренування":
            initiatePayment(chatId);
            break;
        default:
            bot.sendMessage(chatId, "Будь ласка, виберіть курс.");
    }
});

function sendTrainingVideos1(chatId) {
    const videos = [
        { url: 'https://t.me/dksjfdsl/4', description: 'Ходьба по палиці протягом 2хв. Ходимо різними частинами стопи.' },
        { url: 'https://t.me/dksjfdsl/5', description: 'Прокатування ікроножних по 2хв на кожну ногу.' },
        { url: 'https://t.me/dksjfdsl/6', description: 'Спираємось до стіни, сідниці відриваємо. Тягнемо носки на себе 3x30' },
        { url: 'https://t.me/dksjfdsl/7', description: 'Одягаємо резинку на гомілки. Провалюємо стопи і коліна всередину, після розвертаємо в сторони. 3x25-30' },
        { url: 'https://t.me/dksjfdsl/8', description: 'Прокатування бокової частини стегна 2хв кожну ногу.' },
        { url: 'https://t.me/dksjfdsl/9', description: 'Прокатування передньої частини стегна 2хв кожну ногу.' },
        { url: 'https://t.me/dksjfdsl/10', description: 'Відведення прямої ноги на сідничний. Лягаємо в одну лінію...' },
        { url: 'https://t.me/dksjfdsl/11', description: 'Коліно ледь зігнуто. Резинка вище колін. Пряма нога за спиною...' },
        { url: 'https://t.me/dksjfdsl/12', description: 'Лягаємо в одну лінію. Коліна теж в одну лінію з тілом...' }
    ];
    videos.forEach(video => {
        bot.sendVideo(chatId, video.url, { caption: video.description });
    });
}

function sendTrainingVideo2(chatId) {
    const videoUrl = 'https://example.com/video2.mp4';
    bot.sendVideo(chatId, videoUrl, { caption: 'Тренування 2' });
}

function sendTrainingVideo3(chatId) {
    const videoUrl = 'https://example.com/video3.mp4';
    bot.sendVideo(chatId, videoUrl, { caption: 'Тренування 3' });
}

bot.on('pre_checkout_query', (query) => {
    bot.answerPreCheckoutQuery(query.id, true);
});

bot.on('successful_payment', (msg) => {
    const chatId = msg.chat.id;
    userPaymentStatus[chatId] = true;
    bot.sendMessage(chatId, "Дякуємо за оплату! Тепер ви можете отримати доступ до тренування на кожен день.");
});

console.log('Bot is running...');

// node my-telegram-bot
